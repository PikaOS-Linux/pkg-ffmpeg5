#!/usr/bin/make -f

export V=1

# Ubuntu ld adds -Bsymbolic-functions by default, but that prevents FFmpeg from building.
export DEB_LDFLAGS_MAINT_STRIP=-Wl,-Bsymbolic-functions
DEB_BUILD_OPTIONS=nocheck

# Most possible features, compatible with effective licensing of GPLv2+
CONFIG := --prefix=/opt/ffmpeg5/usr \
	--bindir=/opt/ffmpeg5/usr/bin \
	--datadir=/opt/ffmpeg5/usr/share/ffmpeg   \
	--docdir=/opt/ffmpeg5/usr/share/doc/ffmpeg \
	--libdir=/opt/ffmpeg5/usr/lib/$(DEB_HOST_MULTIARCH) \
	--incdir=/opt/ffmpeg5/usr/include/$(DEB_HOST_MULTIARCH) \
	--mandir=/opt/ffmpeg5/usr/share/man   \
	--pkgconfigdir=/opt/ffmpeg5/usr/$(DEB_HOST_MULTIARCH)/pkgconfig \
	--enable-rpath \
	--extra-version="$(DEB_REVISION)" \
	--toolchain=hardened \
	--arch=$(DEB_HOST_ARCH_CPU) \
	--disable-stripping \
	--enable-chromaprint \
	--enable-frei0r \
	--enable-gmp  \
	--enable-gnutls \
	--enable-gpl \
	--enable-ladspa \
	--enable-libaom \
	--enable-libaribb24 \
	--enable-libass \
	--enable-libbluray \
	--enable-libbs2b \
	--enable-libcaca \
	--enable-libcdio \
	--enable-libcodec2 \
	--enable-libdav1d \
	--enable-libdc1394 \
	--enable-libdrm \
	--enable-libflite \
	--enable-libfontconfig \
	--enable-libfreetype \
	--enable-libfribidi \
	--enable-libglslang \
	--enable-libgme \
	--enable-libgsm \
	--enable-libiec61883 \
	--enable-libjack \
	--enable-libmodplug \
	--enable-libmp3lame \
	--enable-libmysofa \
	--enable-libopencore-amrnb \
	--enable-libopencore-amrwb \
	--enable-libopencore_amrnb \
	--enable-libopencore_amrwb \
	--enable-libopenjpeg \
	--enable-libopenmpt \
	--enable-libopus \
	--enable-libpulse \
	--enable-librabbitmq \
	--enable-librist \
	--enable-librtmp \
	--enable-librubberband \
	--enable-libshine \
	--enable-libsnappy \
	--enable-libsoxr \
	--enable-libspeex \
	--enable-libsrt \
	--enable-libssh \
	--enable-libsvtav1 \
	--enable-libtesseract \
	--enable-libtheora \
	--enable-libtwolame \
	--enable-libv4l2 \
	--enable-libvidstab \
	--enable-libvo-amrwbenc \
	--enable-libvo_amrwbenc \
	--enable-libvorbis \
	--enable-libvpx \
	--enable-libwebp \
	--enable-libx264 \
	--enable-libx265 \
	--enable-libxml2 \
	--enable-libxvid \
	--enable-libzimg \
	--enable-libzmq \
	--enable-libzvbi \
	--enable-lv2 \
	--enable-omx \
	--enable-openal \
	--enable-opencl \
	--enable-opengl \
	--enable-sdl2 \
	--enable-small \
	--enable-vaapi \
	--enable-version3 \
	--enable-vulkan

# avoid pocketsphinx on mips (bug#812335), alpha, ia64 and big-endian (bug#968456)
ifeq (,$(filter i386 mips% alpha ia64,$(DEB_HOST_ARCH))$(filter big,$(DEB_HOST_ARCH_ENDIAN)))
CONFIG += --enable-pocketsphinx
endif

# avoid librsvg on almost all ports (bug#983344, bug#991556)
ifeq (,$(filter alpha hppa hurd-i386 ia64 kfreebsd-amd64 kfreebsd-i386 m86k sh4 x32,$(DEB_HOST_ARCH)))
CONFIG += --enable-librsvg
endif

ifeq (amd64,$(DEB_HOST_ARCH))
CONFIG += --enable-libmfx \
	--enable-nvenc \
	--enable-amf
endif

# The standard configuration only uses the shared CONFIG.
CONFIG_standard = --enable-shared

# Additional features, compatible with effective licensing of GPLv3+
CONFIG_extra = --enable-shared \
	--enable-version3 \
	--disable-doc \
	--disable-programs \
	--enable-libaribb24 \
	--enable-libopencore_amrnb \
	--enable-libopencore_amrwb \
	--enable-libtesseract \
	--enable-libvo_amrwbenc

# Do not enable libsmbclient support on hurd-i386
ifeq (,$(filter hurd-i386,$(DEB_HOST_ARCH)))
	CONFIG_extra += --enable-libsmbclient
endif

# The static libraries should not be built with PIC.
CONFIG_static = --disable-pic \
	--disable-doc \
	--disable-programs

# Disable optimizations if requested.
ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
	CONFIG += --disable-optimizations
endif

# Respect CC/CXX from the environment, if they differ from the default.
# Don't set them if they equal the default, because that disables autodetection needed for cross-building.
ifneq (cc,$(CC))
	CONFIG += --cc=$(CC)
endif
ifneq (g++,$(CXX))
	CONFIG += --cxx=$(CXX)
endif

# ffmpeg is involved in build-dependency cycles with x264 and chromaprint, so disable them in stage one.
# Also disable frei0r, which build-depends on opencv.
ifneq (,$(filter pkg.ffmpeg.stage1,$(DEB_BUILD_PROFILES)))
	CONFIG += \
		--disable-chromaprint \
		--disable-frei0r \
		--disable-libplacebo \
		--disable-libx264
else
	CONFIG += \
		--enable-chromaprint \
		--enable-frei0r \
		--enable-libx264
endif
# Some libraries are built only on linux.
ifneq (linux,$(DEB_HOST_ARCH_OS))
	CONFIG += --enable-libplacebo
else
	CONFIG += --disable-libplacebo
endif

# Disable assembly optimizations on x32, because they don't work (yet).
ifneq (,$(filter x32,$(DEB_HOST_ARCH)))
	CONFIG += --disable-asm
endif

# Disable some tests which fail when FLT_EVAL_METHOD != 0 (found on i386, m68k and s390x)
ifneq (,$(filter i386 m68k s390x,$(DEB_HOST_ARCH_CPU)))
	CONFIG += --ignore-tests=hapenc-hap-none,hapenc-hapa-none,hapenc-hapq-none
endif

# Set cross-build prefix for compiler, pkg-config...
ifneq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
	CONFIG += --cross-prefix=$(DEB_HOST_GNU_TYPE)- \
		--target-os=$(DEB_HOST_ARCH_OS)
endif

# Use the default debhelper scripts, where possible.
%:
	dh $@


override_dh_auto_clean:
		echo "disabled"

# Add configuration options:
override_dh_auto_configure:
	./configure \
		$(CONFIG)

override_dh_install:
	dh_install

override_dh_dwz:
	dh_dwz -Xlibavcodec -Xlibavfilter -Xlibavutil -Xlibswresample -Xlibswscale
